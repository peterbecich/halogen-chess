apiVersion: jenkins.io/v1alpha2
kind: Jenkins
metadata:
  name: jenkins-example
  namespace: default
spec:
  configurationAsCode:
    configurations:
    - name: jenkins-operator-user-configuration
    secret:
      name: ""
  groovyScripts:
    configurations: []
    secret:
      name: ""
  jenkinsAPISettings:
    authorizationStrategy: createUser
  master:
    basePlugins:
    - name: ionicons-api
      version: "31.v4757b_6987003"
    - name: kubernetes
      version: "3734.v562b_b_a_627ea_c"
    - name: workflow-job
      version: "1207.ve6191ff089f8"
      # version: "1246.v6110f5347f1f"
    - name: workflow-multibranch
      version: "716.vc692a_e52371b_"
    # - name: workflow-aggregator
    #   version: "590.v6a_d052e5a_a_b_5"
    - name: workflow-aggregator
      version: "590.v6a_d052e5a_a_b_5"
      # version: "2.7"
    - name: workflow-durable-task-step
      version: "1206.v8a_d5f86e336b"
    - name: workflow-cps
      version: "2803.v1a_f77ffcc773"
    - name: metrics
      version: 4.2.10-389.v93143621b_050
    - name: git
      version: "4.12.1"
    - name: job-dsl
      version: "1.81"
    - name: configuration-as-code
      version: "1559.v38a_b_2e3b_6b_b_7"
    - name: kubernetes-credentials-provider
      version: "1.206.v7ce2cf7b_0c8b"
    disableCSRFProtection: false
    containers:
      - name: jenkins-master
        image: jenkins/jenkins:2.356-alpine

        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 12
          httpGet:
            path: /login
            port: http
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /login
            port: http
            scheme: HTTP
          initialDelaySeconds: 80
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1500m
            memory: 3Gi
          requests:
            cpu: "1"
            memory: 500Mi
      - name: backup # container responsible for the backup and restore
        env:
          - name: BACKUP_DIR
            value: /backup
          - name: JENKINS_HOME
            value: /jenkins-home
          - name: BACKUP_COUNT
            value: "3" # keep only the 2 most recent backups
        image: virtuslab/jenkins-operator-backup-pvc:v0.1.1 # look at backup/pvc directory
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /jenkins-home # Jenkins home volume
            name: jenkins-home
          - mountPath: /backup # backup volume
            name: backup
        resources:
          limits:
            cpu: 1000m
            memory: 3Gi
          requests:
            cpu: "1"
            memory: 500Mi
    volumes:
      - name: backup # PVC volume where backups will be stored
        persistentVolumeClaim:
          claimName: jenkins-pvc
  seedJobs:
    - id: jenkins-operator
      targets: "cicd/jobs/*.jenkins"
      description: "Jenkins Operator repository"
      repositoryBranch: master
      repositoryUrl: https://github.com/jenkinsci/kubernetes-operator.git
  backup:
    containerName: backup # container name is responsible for backup
    action:
      exec:
        command:
          - /home/user/bin/backup.sh # this command is invoked on "backup" container to make backup, for example /home/user/bin/backup.sh <backup_number>, <backup_number> is passed by operator
    interval: 30 # how often make backup in seconds
    makeBackupBeforePodDeletion: true # make a backup before pod deletion
  restore:
    containerName: backup # container name is responsible for restore backup
    action:
      exec:
        command:
          - /home/user/bin/restore.sh # this command is invoked on "backup" container to make restore backup, for example /home/user/bin/restore.sh <backup_number>, <backup_number> is passed by operator
    #recoveryOnce: <backup_number> # if want to restore specific backup configure this field and then Jenkins will be restarted and desired backup will be restored
    getLatestAction:
      exec:
        command:
          - /home/user/bin/get-latest.sh # this command is invoked on "backup" container to get last backup number before pod deletion; not having it in the CR may cause loss of data
